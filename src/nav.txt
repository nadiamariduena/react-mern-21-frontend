
# üçå

### THE NAVBAR

- we are going to use 'styled components' instead of css/scss styles

<br>

```javascript
import React from "react";
import styled from "styled-components";
//
//

const Container = styled.div`
  height: 60px;
  background-color: orange;
`;

//
const Wrapper = styled.div`
  padding: 10px 20px;
  display: flex;
`;
//

const Left = styled.div``;
//
const Center = styled.div``;
//
const Right = styled.div``;
//
//
//
//
const Navbar = () => {
  return (
    <Container>
      <Wrapper>
        <Left>Left</Left>
        <Center>center</Center>
        <Right>right</Right>
      </Wrapper>
    </Container>
  );
};

export default Navbar;
```

#### at this point it s not horizontal, so we will use Flex box

- Lets add the display:flex to put them side by side

<br>

```javascript
     <Left>Left</Left>
        <Center>center</Center>
        <Right>right</Right>
```

<br>

##### Now they are side by side. Lets give them an spacing, so that they are no so close to each other

```javascript
  justify-content: space-between;
```

<br>

### But what happens if we write something really long, like this for example:

```javascript
<Wrapper>
  <Left>
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Omnis
    reprehenderit culpa eum dolore laboriosam at tempore ullam corporis
    obcaecati suscipit?
  </Left>
  <Center>center</Center>
  <Right>right</Right>
</Wrapper>
```

[<img src="/src/img/flex.jpg"/>]()

#### Its not bad but this is not what we want for our project, what we want is to devide the 3 columns to exact parts, for that we can do the following:

<br>

- divide them into 33.33% to each

<br>

```javascript
const Left = styled.div`
  // if you consider the wrapper 100%
  width: 33.3%;
`;
//
const Center = styled.div`
  width: 33.3%;
`;
//
const Right = styled.div`
  width: 33.3%;
`;
//
//
```

<br>

[<img src="/src/img/flex1.jpg"/>]()

<br>

#### or use a **trick from flex box**

```javascript
const Left = styled.div`
  // if you consider the wrapper 100%
  flex: 1;
  border: 1px solid #000;
`;
//
const Center = styled.div`
  flex: 2;
  border: 1px solid #000;
`;
//
const Right = styled.div`
  flex: 1;
  border: 1px solid #000;
`;
//
```

[<img src="/src/img/flex2.jpg"/>]()

<br>

### But what if we add 2 units to the middle column?

```javascript
const Left = styled.div`
  // if you consider the wrapper 100%
  flex: 1;
  border: 1px solid #000;
`;
//
const Center = styled.div`
  flex: 2;
  border: 1px solid #000;
`;
//
const Right = styled.div`
  flex: 1;
  border: 1px solid #000;
`;
//
```

[<img src="/src/img/flex3.jpg"/>]()

<br>
<br>
<br>

### Now lets create some components for the 'left side'

0:17:28

#### You will have to download material UI to use the search icon, its important because otherwise you will have to create the box search by yourself and if your do:

- The box will not have the same level of the center and right column, since the box of the language is on top

- **a solution** in case your dont want to use the icon from material Ui, use flex-direction: row inside the left column, to position the 2 boxes side by side. Another option, create 4 columns but (i dont know how it will work later in the project)

```javascript
const Left = styled.div`
  // if you consider the wrapper 100%
  flex: 1;
  //
  display: flex;
  align-items: center;
  flex-direction: row;
  //
  border: 0.5px solid green;
`;
```

##### result

[<img src="/src/img/flex4_searchbar.jpg"/>]()
